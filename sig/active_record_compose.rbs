# TypeProf 0.21.9

# Classes
module ActiveRecordCompose
  VERSION: String

  interface _ARLike
    def save: -> bool
    def save!: -> untyped
    def destroy: -> bool
    def destroy!: -> untyped
    def invalid?: -> bool
    def valid?: -> bool
    def errors: -> untyped
    def ==: (untyped) -> bool
  end

  type attribute_name = (String | Symbol)
  type destroy_context_type = ((^() -> boolish) | (^(_ARLike) -> boolish))
  type condition_type = ((^() -> boolish) | (^(_ARLike) -> boolish))

  class InnerModelCollection
    include ::Enumerable[_ARLike]

    def each: () { (_ARLike) -> void } -> InnerModelCollection | () -> Enumerator[_ARLike, self]
    def <<: (_ARLike) -> self
    def push: (_ARLike, ?destroy: (bool | Symbol | destroy_context_type), ?if: (nil | Symbol | condition_type)) -> self
    def empty?: -> bool
    def clear: -> self
    def delete: (_ARLike) -> InnerModelCollection?
  end

  class Model
    extend ActiveModel::Callbacks
    include ActiveModel::Model
    include ActiveModel::Validations::Callbacks
    extend ActiveModel::Validations::ClassMethods
    include ActiveModel::Attributes

    def self.delegate_attribute: (*untyped methods, to: untyped, ?allow_nil: untyped?, ?private: untyped?) -> untyped
    def self.connection: -> ActiveRecord::ConnectionAdapters::AbstractAdapter
    def self.lease_connection: -> ActiveRecord::ConnectionAdapters::AbstractAdapter
    def self.with_connection: [T] () { () -> T } -> T

    def initialize: (?Hash[attribute_name, untyped]) -> void
    def save: -> bool
    def save!: -> untyped
    def create: (?Hash[attribute_name, untyped]) -> bool
    def create!: (?Hash[attribute_name, untyped]) -> untyped
    def update: (?Hash[attribute_name, untyped]) -> bool
    def update!: (?Hash[attribute_name, untyped]) -> untyped
    def id: -> untyped

    private
    def models: -> InnerModelCollection
    def validate_models: -> void
    def save_models: (bang: bool) -> bool
    def raise_validation_error: -> bot
    def raise_on_save_error: -> bot
    def raise_on_save_error_message: -> String
  end
end
